---
import { type CollectionEntry, getCollection } from "astro:content";
import { type Project } from "../../content/config";
import Layout from "../../layouts/Layout.astro";
import { Image } from "astro:assets";
import Prose from "../../components/Prose.astro";

export async function getStaticPaths() {
  const projectEntries = await getCollection("project");
  return projectEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

interface Props {
  entry: CollectionEntry<"project">;
}

const { entry } = Astro.props;
const project: Project = entry.data;
const { Content } = await entry.render();

const images = import.meta.glob("/src/assets/*.{jpeg,jpg,png,gif}");
---

<Layout title={project.title}>
  <main class='md:flex md:justify-center mt-20'>
    <article class='prose prose-lg max-w-[750px] prose-img:mx-auto lg:mb-10 px-4'>
      {
        project.heroImage && (
          <Image
            width={750}
            height={422}
            format='webp'
            src={images[project.heroImage]()}
            alt={project.title}
            class='w-full mb-6 rounded-md'
          />
        )
      }
      <div class='flex items-center gap-4'>
        <h1 class='title my-2 text-4xl font-bold'>{project.title}</h1>{
          project.badge && <div class='badge badge-accent my-1'>{project.badge}</div>
        }
      </div>

      {
        project.link && (
          <a href={project.link} class='link flex items-center gap-1' target='_blank'>
            {project.linkText || "Link"}{" "}
            <svg
              width='15'
              height='15'
              viewBox='0 0 15 15'
              fill='none'
              xmlns='http://www.w3.org/2000/svg'
            >
              <path
                d='M3 2C2.44772 2 2 2.44772 2 3V12C2 12.5523 2.44772 13 3 13H12C12.5523 13 13 12.5523 13 12V8.5C13 8.22386 12.7761 8 12.5 8C12.2239 8 12 8.22386 12 8.5V12H3V3L6.5 3C6.77614 3 7 2.77614 7 2.5C7 2.22386 6.77614 2 6.5 2H3ZM12.8536 2.14645C12.9015 2.19439 12.9377 2.24964 12.9621 2.30861C12.9861 2.36669 12.9996 2.4303 13 2.497L13 2.5V2.50049V5.5C13 5.77614 12.7761 6 12.5 6C12.2239 6 12 5.77614 12 5.5V3.70711L6.85355 8.85355C6.65829 9.04882 6.34171 9.04882 6.14645 8.85355C5.95118 8.65829 5.95118 8.34171 6.14645 8.14645L11.2929 3H9.5C9.22386 3 9 2.77614 9 2.5C9 2.22386 9.22386 2 9.5 2H12.4999H12.5C12.5678 2 12.6324 2.01349 12.6914 2.03794C12.7504 2.06234 12.8056 2.09851 12.8536 2.14645Z'
                fill='currentColor'
                fill-rule='evenodd'
                clip-rule='evenodd'
              />
            </svg>
          </a>
        )
      }
      {project.date && <p class='text-sm text-base-content/50'>{project.date.getFullYear()}</p>}
      {
        project.tags &&
          project.tags.map((tag) => (
            <a href={`/blog/tag/${tag}`} class='badge badge-outline ml-2 no-underline'>
              {tag}
            </a>
          ))
      }
      <div class='divider my-2'></div>
      <Prose>
        <Content />
      </Prose>
    </article>
  </main>
</Layout>
